@{
    ViewData["Title"] = "Manage Products";
    Layout = "~/Views/Shared/AdminLTE/_Layout.cshtml";
}
@using MongoShop.Utils;
@using MongoShop.Areas.Admin.ViewModels.Product;
@model PaginatedList<IndexProductViewModel>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Product List</h3>
                <div class="card-tools">
                    <div class="input-group input-group-sm" style="width: 200px;">

                        <form class="input-group input-group-sm" method="get" asp-controller="ElasticSearch" asp-action="SearchAdmin" asp-area="">
                            <input type="text" name="queryString" class="form-control float-right" placeholder="Search">

                            <div class="input-group-append">
                                <button type="submit" class="btn btn-default"><i class="fas fa-search"></i></button>
                            </div>
                        </form>

                        <br />
                        <a type="button" style="width: 200px;" class="btn btn-success" href="@Url.Action("Create","Product")">Create</a>
                    </div>
                </div>
            </div>
            <!-- /.card-header -->

            <div class="card-body table-responsive p-0" style="height: 500px;">
                <table class="table table-head-fixed text-nowrap">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Price</th>
                            <th>StockQuantity</th>
                            <th>Size</th>
                            <th>Category</th>
                            <th>Sub Category</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in @Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(model => item.Name)</td>
                                <td>@String.Format("{0:c}", item.Price)</td>
                                <td>@Html.DisplayFor(model => item.StockQuantity)</td>
                                <td>@Html.DisplayFor(model => item.Size)</td>
                                <td>@Html.DisplayFor(model => item.Category)</td>
                                <td>@Html.DisplayFor(model => item.SubCategory)</td>
                                <td>
                                    <div class="btn-group">
                                        @* TODO: This should be changed.*@
                                        <a type="button" class="btn btn-default" href="@Url.Action("Detail","Product", new { Area = "Admin",id = item.Id})">Detail</a>
                                        <a type="button" class="btn btn-primary" href="@Url.Action("Edit","Product", new { Area = "Admin", id = item.Id})">Edit</a>
                                        <a type="button" class="btn btn-danger" href="@Url.Action("Delete","Product", new { Area = "Admin",id = item.Id})">Delete</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           class="btn btn-info @prevDisabled">
            Previous
        </a>
        <a asp-action="Index"
           asp-route-currentPageNumber="@(Model.PageIndex + 1)"
           class="btn btn-info @nextDisabled float-right">
            Next
        </a>
    </div>
</div>